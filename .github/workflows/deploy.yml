name: Deploy to EC2

on:
  workflow_dispatch:   
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_PRIVATE_KEY: ${{ secrets.IN }} # Your private key secret
      EC2_IP: ${{ secrets.EC2_PRIVATE_IP }} # Your EC2 private IP
      EC2_SECURITY_GROUP_ID: sg-07c5376a7241e15ea # Your EC2 security group ID
      ASG_NAME: ${{ secrets.ASG_NAME }} # If applicable, use your ASG name secret
      LOAD_BALANCER_URL: ${{ secrets.LOAD_BALANCER_URL }} # If applicable, use your Load Balancer URL secret

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1 # Your AWS region

      # Step 3: Get GitHub Actions Runner IP
      - name: Get GitHub Actions Runner IP
        id: get_ip
        run: |
          RUNNER_IP=$(curl -s https://api.ipify.org)
          echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_ENV
          echo "GitHub runner IP: $RUNNER_IP"

      # Step 4: Add GitHub Actions Runner IP to EC2 Security Group
      - name: Add GitHub Actions Runner IP to EC2 Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id sg-07c5376a7241e15ea \
            --protocol tcp \
            --port 22 \
            --cidr $RUNNER_IP/32

      # Step 5: Add EC2 host to known hosts
      - name: Add EC2 host to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_PRIVATE_IP }} >> ~/.ssh/known_hosts
