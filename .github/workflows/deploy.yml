name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # Step 3: Get the runner's public IP address
    - name: Get runner IP
      id: get-ip
      run: |
        echo "runner_ip=$(curl -s ifconfig.me)" >> $GITHUB_ENV

    # Step 4: Add the IP to the security group
    - name: Add IP to Security Group
      env:
        RUNNER_IP: ${{ env.runner_ip }}
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id sg-07c5376a7241e15ea \
          --protocol tcp \
          --port 22 \
          --cidr $RUNNER_IP/32

    # Step 5: Deploy the application
    - name: Deploy LAMP application
      env:
        EC2_IP: ${{ secrets.EC2_PRIVATE_IP }}
        PEM_FILE: ${{ secrets.IN }}
      run: |
        scp -i $PEM_FILE -r ./* ubuntu@$EC2_IP:/var/www/html
        ssh -i $PEM_FILE ubuntu@$EC2_IP 'sudo systemctl restart apache2'

    # Step 6: Remove IP from Security Group
    - name: Remove IP from Security Group
      env:
        RUNNER_IP: ${{ env.runner_ip }}
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id sg-07c5376a7241e15ea \
          --protocol tcp \
          --port 22 \
          --cidr $RUNNER_IP/32
