name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Create and Verify PEM File
      - name: Create and Verify PEM file
        run: |
          echo "${{ secrets.IN }}" > key.pem
          chmod 600 key.pem
          echo "PEM file created successfully."
          ls -l key.pem

      # Step 2: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 3: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Step 4: Get Runner IP
      - name: Get Runner IP
        id: get-ip
        run: |
          echo "Getting runner IP..."
          RUNNER_IP=$(curl -s ifconfig.me)
          echo "Runner's Public IP Address: $RUNNER_IP"
          echo "runner_ip=$RUNNER_IP" >> $GITHUB_ENV

      # Step 5: Add Runner IP to Security Group
      - name: Add Runner IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id sg-07c5376a7241e15ea \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.runner_ip }}/32

      # Step 6: Deploy the Application
      - name: Deploy Application
        run: |
          scp -i key.pem -r ./* ubuntu@${{ secrets.EC2_PRIVATE_IP }}:/var/www/html
          ssh -i key.pem ubuntu@${{ secrets.EC2_PRIVATE_IP }} 'sudo systemctl restart apache2'

      # Step 7: Remove Runner IP from Security Group
      - name: Remove Runner IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id sg-07c5376a7241e15ea \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.runner_ip }}/32

